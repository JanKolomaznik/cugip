#pragma once

#include <cugip/math.hpp>
#include <cugip/utils.hpp>

namespace cugip {

namespace detail {


} //namespace detail

template<int tLength, typename tType>
struct ComplexDaubechiesFilter;


template<typename TType>
struct ComplexDaubechiesFilter<6, TType>
{
	// Real lowpass filter
	static constexpr std::array<TType, 6> h = {
		-0.0662912607,
		0.1104854346,
		0.6629126074,
		0.6629126074,
		0.1104854346,
		-0.0662912607
	};

	// Real highpass filter
	static constexpr std::array<TType, 6> g = {
		-0.0662912607
		-0.1104854346,
		0.6629126074,
		-0.6629126074,
		0.1104854346,
		0.0662912607,
	};

	// imaginary lowpass filter
	static constexpr std::array<TType, 6> hi = {
		-0.0855816496,
		-0.0855816496,
		0.1711632992,
		0.1711632992,
		-0.0855816496,
		-0.0855816496
	};

	// Imaginary highpass filter
	static constexpr std::array<TType, 6> gi = {
		0.0855816496
		-0.0855816496,
		-0.1711632992,
		0.1711632992,
		0.0855816496,
		-0.0855816496,
	};
};


template<typename TType>
struct ComplexDaubechiesFilter<14, TType>
{
	// Real lowpass filter
	static constexpr std::array<TType, 14> h = {
		0.0049120149,
		-0.0054111299,
		-0.0701089996,
		-0.0564377788,
		0.1872348173,
		0.3676385056,
		0.2792793518,
		0.2792793518,
		0.3676385056,
		0.1872348173,
		-0.0564377788,
		-0.0701089996,
		-0.0054111299,
		0.0049120149
	};

	// Real highpass filter
	static constexpr std::array<TType, 14> g = {
		0.0049120149,
		0.0054111299,
		-0.0701089996,
		0.0564377788,
		0.1872348173,
		-0.3676385056,
		0.2792793518,
		-0.2792793518,
		0.3676385056,
		-0.1872348173,
		-0.0564377788,
		0.0701089996,
		-0.0054111299,
		-0.0049120149
	};

	// imaginary lowpass filter
	static constexpr std::array<TType, 14> hi = {
		0.0018464710,
		0.0143947836,
		0.0079040001,
		-0.1169376946,
		-0.2596312614,
		-0.0475928095,
		0.4000165107,
		0.4000165107,
		-0.0475928095,
		-0.2596312614,
		-0.1169376946,
		0.0079040001,
		0.0143947836,
		0.0018464710
	};

	// Imaginary highpass filter
	static constexpr std::array<TType, 14> gi = {
		-0.0018464710,
		0.0143947836,
		-0.0079040001,
		-0.1169376946,
		0.2596312614,
		-0.0475928095,
		-0.4000165107,
		0.4000165107,
		0.0475928095,
		-0.2596312614,
		0.1169376946,
		0.0079040001,
		-0.0143947836,
		0.0018464710
	};
};

template<typename TType>
struct ComplexDaubechiesFilter<22, TType>
{
	// Real lowpass filter
	static constexpr std::array<TType, 22> h = {
		-0.0002890832,
		-0.0000935982,
		0.0059961342,
		0.0122232015,
		-0.0243700791,
		-0.1092940542,
		-0.0918847036,
		0.1540094645,
		0.4014277015,
		0.3153022916,
		0.0440795062,
		0.0440795062,
		0.3153022916,
		0.4014277015,
		0.1540094645,
		-0.0918847036,
		-0.1092940542,
		-0.0243700791,
		0.0122232015,
		0.0059961342,
		-0.0000935982,
		-0.0002890832
	};

	// Real highpass filter
	static constexpr std::array<TType, 22> g = {
		-0.0002890832,
		0.0000935982,
		0.0059961342,
		-0.0122232015,
		-0.0243700791,
		0.1092940542,
		-0.0918847036,
		-0.1540094645,
		0.4014277015,
		-0.3153022916,
		0.0440795062,
		-0.0440795062,
		0.3153022916,
		-0.4014277015,
		0.1540094645,
		0.0918847036,
		-0.1092940542,
		0.0243700791,
		0.0122232015,
		-0.0059961342,
		-0.0000935982,
		0.0002890832
	};

	// imaginary lowpass filter
	static constexpr std::array<TType, 22> hi = {
		0.0000211708,
		-0.0012780664,
		-0.0029648612,
		0.0144283733,
		0.0503067404,
		-0.0044659104,
		-0.1999654035,
		-0.2603015239,
		0.0013800055,
		0.2232934469,
		0.1795460286,
		0.1795460286,
		0.2232934469,
		0.0013800055,
		-0.2603015239,
		-0.1999654035,
		-0.0044659104,
		0.0503067404,
		0.0144283733,
		-0.0029648612,
		-0.0012780664,
		0.0000211708
	};

	// Imaginary highpass filter
	static constexpr std::array<TType, 22> gi = {
		-0.0000211708,
		-0.0012780664,
		0.0029648612,
		0.0144283733,
		-0.0503067404,
		-0.0044659104,
		0.1999654035,
		-0.2603015239,
		-0.0013800055,
		0.2232934469,
		-0.1795460286,
		0.1795460286,
		-0.2232934469,
		0.0013800055,
		0.2603015239,
		-0.1999654035,
		0.0044659104,
		0.0503067404,
		-0.0144283733,
		-0.0029648612,
		0.0012780664,
		0.0000211708
	};
};

} //namespace cugip
